replicaCount: 2

image:
  repository: dmoleynik0307/backend-app
  pullPolicy: IfNotPresent
  tag: 2.0.0

podLabels: { }

service:
  type: ClusterIP
  targetPort: 8000
  port: 80

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  hosts:
    - host: arch.homework
      paths:
        - path: /(otusapp/.+/|)(.*)
          pathType: ImplementationSpecific
          servicePortName: http

env:
  - name: SPRING_DATASOURCE_URL
    valueFrom:
      configMapKeyRef:
        name: backend-app
        key: db-url
  - name: SPRING_DATASOURCE_USERNAME
    valueFrom:
      configMapKeyRef:
        name: backend-app
        key: db-username
  - name: SPRING_DATASOURCE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgresql-db-pass
        key: password

migrationJob:
  enabled: true
  name: backend-migration
  namespace: default
  labels:
    app: backend-migration
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation
  spec:
    containerName: backend-migration
    image: dmoleynik0307/backend-migration:2.0.0
    env:
      - name: LIQUIBASE_COMMAND_URL
        value: "jdbc:postgresql://postgresql:5432/backend-app"
      - name: LIQUIBASE_COMMAND_USERNAME
        value: "backend"
      - name: LIQUIBASE_COMMAND_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgresql-db-pass
            key: password
    restartPolicy: Never

configMap:
  db-url: "jdbc:postgresql://postgresql:5432/backend-app"
  db-username: "backend"

serviceMonitor:
  endpoints:
    - port: http
      scrapeTimeout: 30s
      path: /actuator/prometheus
      honorLabels: true
      scheme: http

livenessProbe:
  tcpSocket:
    port: 8000
  initialDelaySeconds: 15
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /health
    port: 8000
  initialDelaySeconds: 15
  periodSeconds: 10
